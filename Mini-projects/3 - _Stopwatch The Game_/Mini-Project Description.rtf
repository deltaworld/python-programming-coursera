{\rtf1\ansi\ansicpg1252\cocoartf1138\cocoasubrtf510
{\fonttbl\f0\froman\fcharset0 Times-Roman;\f1\fnil\fcharset0 Monaco;\f2\fnil\fcharset0 LucidaGrande;
\f3\fnil\fcharset0 HelveticaNeue;}
{\colortbl;\red255\green255\blue255;\red255\green255\blue128;\red16\green113\blue198;\red207\green0\blue52;
\red245\green245\blue248;\red38\green38\blue38;\red235\green235\blue235;\red241\green241\blue241;\red255\green255\blue194;
}
{\*\listtable{\list\listtemplateid1\listhybrid{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{decimal\}.}{\leveltext\leveltemplateid1\'02\'00.;}{\levelnumbers\'01;}\fi-360\li720\lin720 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{circle\}}{\leveltext\leveltemplateid2\'01\uc0\u9702 ;}{\levelnumbers;}\fi-360\li1440\lin1440 }{\listname ;}\listid1}
{\list\listtemplateid2\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid101\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid2}}
{\*\listoverridetable{\listoverride\listid1\listoverridecount0\ls1}{\listoverride\listid2\listoverridecount0\ls2}}
\paperw11900\paperh16840\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\deftab720
\pard\pardeftab720\sa360

\f0\fs24 \cf0 \cb2 Your grade is 
\fs56 12
\fs24 , which was calculated based on a combination of the grade you received from your peers and the grade you gave yourself.\
See below for details.\
\pard\pardeftab720\sl840\sa200

\b\fs40 \cf0 \cb1 Mini-project description - "Stopwatch: The Game"\
\pard\pardeftab720

\b0\fs24 \cf0 \
Our mini-project for this week will focus on combining text drawing in the canvas with timers to build a simple digital stopwatch that keeps track of the time in tenths of a second. The stopwatch should contain "Start", "Stop" and "Reset" buttons. To help guide you through this project, we suggest that you download the provided {\field{\*\fldinst{HYPERLINK "http://www.codeskulptor.org/#examples-stopwatch_template.py"}}{\fldrslt 
\b \cf3 program template
\b0  }}for this mini-project and build your stopwatch program as follows:
\b\fs32 \
\pard\pardeftab720\sl840\sa200
\cf0 Mini-project development process\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sl420
\ls1\ilvl0
\b0\fs24 \cf0 {\listtext	1.	}Construct a timer with an associated interval of 0.1 seconds whose event handler increments a global integer. (Remember that 
\f1 \cf4 \cb5 create_timer
\f0 \cf0 \cb1  takes the interval specified in milliseconds.) This integer will keep track of the time in tenths of seconds. Test your timer by printing this global integer to the console. Use the CodeSkulptor reset button in the blue menu bar to terminate your program and stop the timer and its print statements. 
\b Important:
\b0  Do not use floating point numbers to keep track of tenths of a second! While it's certainly possible to get it working, the imprecision of floating point can make your life miserable. Use an integer instead, i.e., 12 represents 1.2 seconds.\
{\listtext	2.	}Write the event handler function for the canvas that draws the current time (simply as an integer, you should not worry about formatting it yet) in the middle of the canvas. Remember that you will need to convert the current time into a string using 
\f1 \cf4 \cb5 str
\f0 \cf0 \cb1  before drawing it.\
{\listtext	3.	}Add "Start" and "Stop" buttons whose event handlers start and stop the timer. Next, add a "Reset" button that stops the timer and reset the current time to zero. The stopwatch should be stopped when the frame opens.\
{\listtext	4.	}Next, write a helper function 
\f1 \cf4 \cb5 format(t)
\f0 \cf0 \cb1  that returns a string of the form 
\f1 \cf4 \cb5 A:BC.D
\f0 \cf0 \cb1  where 
\f1 \cf4 \cb5 A, B, C
\f0 \cf0 \cb1  and 
\f1 \cf4 \cb5 D
\f0 \cf0 \cb1  are digits in the range 0-9. Test this function independent of your project. Note that the string returned by your helper function 
\f1 \cf4 \cb5 format
\f0 \cf0 \cb1  should always correctly include leading zeros. For example\
\pard\tx940\tx1440\pardeftab720\li1440\fi-1440\sl420
\ls1\ilvl1
\f1 \cf4 \cb5 {\listtext	
\f2 \uc0\u9702 
\f1 	}format(0) == 0:00.0
\f0 \cf0 \cb1 \
\ls1\ilvl1
\f1 \cf4 \cb5 {\listtext	
\f2 \uc0\u9702 
\f1 	}format(11) = 0:01.1
\f0 \cf0 \cb1 \
\ls1\ilvl1
\f1 \cf4 \cb5 {\listtext	
\f2 \uc0\u9702 
\f1 	}format(321) = 0:32.1
\f0 \cf0 \cb1 \
\ls1\ilvl1
\f1 \cf4 \cb5 {\listtext	
\f2 \uc0\u9702 
\f1 	}format(613) = 1:01.3
\f0 \cf0 \cb1 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\sl420
\ls1\ilvl0
\b \cf0 {\listtext	5.	}Hint:
\b0  Use integer division and remainder (modular arithmetic) to extract various digits for the formatted time from the global integer timer.\
{\listtext	6.	}Insert a call to the 
\f1 \cf4 \cb5 format
\f0 \cf0 \cb1  function into your draw handler to complete the stopwatch. (Note that the stopwatch need only work correctly up to 10 minutes, beyond that its behavior is your choice.)\
{\listtext	7.	}Finally, to turn your stopwatch into a test of reflexes, add to two numerical counters that keep track of the number of times that you have stopped the watch and how many times you manage to stop the watch on a whole second (1.0, 2.0, 3.0, etc.). These counters should be drawn in the upper right-hand part of the stopwatch canvas in the form 
\f1 \cf4 \cb5 "x/y"
\f0 \cf0 \cb1  where 
\f1 \cf4 \cb5 x
\f0 \cf0 \cb1  is the number of successful stops and 
\f1 \cf4 \cb5 y
\f0 \cf0 \cb1  is number of total stops. My best effort at this simple game is around a 25% success rate.\
{\listtext	8.	}Add code to ensure that hitting the "Stop" button when the timer is already stopped does not change your score. We suggest that you add a global Boolean variable that is 
\f1 \cf4 \cb5 True
\f0 \cf0 \cb1  when the stopwatch is running and 
\f1 \cf4 \cb5 False
\f0 \cf0 \cb1  when the stopwatch is stopped. You can then use this value to determine whether to update the score when the "Stop" button is pressed.\
{\listtext	9.	}Modify "Reset" so as to set these numbers back to zero when clicked.\
\pard\pardeftab720
\cf0 Steps 1-3 and 5-7 above are relatively straightforward. However, step 4 requires some adept use of integer division and modular arithmetic. So, we again emphasize that you build and debug the helper function 
\f1 \cf4 \cb5 format(t)
\f0 \cf0 \cb1  separately following the tips in the Code Clinic thread. Following this process will save you time. For an example of a full implementation, we suggest that you watch the video lecture on this mini-project.
\b\fs32 \
\pard\pardeftab720\sl840\sa200
\cf0 Grading Rubric - 13 pts total (scaled to 100 pts)\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sl420
\ls2\ilvl0
\b0\fs24 \cf0 {\listtext	\'95	}1 pt - The program successfully opens a frame with the stopwatch stopped.\
{\listtext	\'95	}1 pt - The program has a working "Start" button that starts the timer.\
{\listtext	\'95	}1 pt - The program has a working "Stop" button that stops the timer.\
{\listtext	\'95	}1 pt - The program has a working "Reset" button that stops the timer (if running) and resets the timer to 0.\
{\listtext	\'95	}4 pts - The time is formatted according to the description in step 4 above. Award partial credit corresponding to 1 pt per correct digit. For example, a version that just draw tenths of seconds as a whole number should receive 1 pt. A version that draws the time with a correctly placed decimal point (but no leading zeros) only should receive 2 pts. A version that draws minutes, seconds and tenths of seconds but fails to always allocate two digits to seconds should receive 3 pts.\
{\listtext	\'95	}2 pts - The program correctly draws the number of successful stops at a whole second versus the total number of stops. Give one point for each number displayed. If the score is correctly reported as a percentage instead, give only one point.\
{\listtext	\'95	}2 pts - The "Stop" button correctly updates these success/attempts numbers. Give only one point if hitting the "Stop" button changes these numbers when the timer is already stopped.\
{\listtext	\'95	}1 pt - The "Reset" button clears the success/attempts numbers.\
\pard\pardeftab720\sl420\sa200

\f3\fs28 \cf6 \cb7 In the submission phase, cut and paste the URL for your cloud-saved mini-project into the box below. Hit the "Submit for grading" button when you are ready to submit your mini-project.\
When evaluating, copy and paste the link above into a new browser tab, to load your peer's program into CodeSkulptor. Evaluate your peer's program according to the rubric below and hit "Submit" when your evaluation is complete.\
\pard\pardeftab720\sl420
{\field{\*\fldinst{HYPERLINK "http://www.codeskulptor.org/#user12_lRHfq13PE0sVr8q_1.py"}}{\fldrslt \cf3 \cb8 http://www.codeskulptor.org/#user12_lRHfq13PE0sVr8q_1.py}}\cb8 \
\pard\pardeftab720\sl540
\cf6 \cb9 \
}