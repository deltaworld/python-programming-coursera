{\rtf1\ansi\ansicpg1252\cocoartf1138\cocoasubrtf510
{\fonttbl\f0\froman\fcharset0 Times-Roman;\f1\fnil\fcharset0 Monaco;\f2\fnil\fcharset0 HelveticaNeue;
}
{\colortbl;\red255\green255\blue255;\red255\green255\blue128;\red16\green113\blue198;\red207\green0\blue52;
\red245\green245\blue248;\red38\green38\blue38;\red235\green235\blue235;\red241\green241\blue241;\red255\green255\blue194;
}
{\*\listtable{\list\listtemplateid1\listhybrid{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{decimal\}.}{\leveltext\leveltemplateid1\'02\'00.;}{\levelnumbers\'01;}\fi-360\li720\lin720 }{\listname ;}\listid1}
{\list\listtemplateid2\listhybrid{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{decimal\}.}{\leveltext\leveltemplateid101\'02\'00.;}{\levelnumbers\'01;}\fi-360\li720\lin720 }{\listname ;}\listid2}
{\list\listtemplateid3\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid201\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid3}}
{\*\listoverridetable{\listoverride\listid1\listoverridecount0\ls1}{\listoverride\listid2\listoverridecount0\ls2}{\listoverride\listid3\listoverridecount0\ls3}}
\paperw11900\paperh16840\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\deftab720
\pard\pardeftab720\sa360

\f0\fs24 \cf0 \cb2 Your grade is 
\fs56 18
\fs24 , which was calculated based on a combination of the grade you received from your peers and the grade you gave yourself.\
See below for details.\
\pard\pardeftab720\sl840\sa200

\b\fs32 \cf0 \cb1 A reminder about the Honor Code\
\pard\pardeftab720

\b0\fs24 \cf0 For previous mini-projects, we have had instances of students submitting solutions that have been copied from the web. Remember, if you can find code on the web for one of the mini-projects, we can also find that code. Submitting copied code violates the Honor Code for this class as well as Coursera's Terms of Service. Please write your own code and refrain from copying. If, during peer evaluation, you suspect a submitted mini-project includes copied code, please evaluate as usual and email the assignment details to {\field{\*\fldinst{HYPERLINK "mailto:interactivepython@online.rice.edu"}}{\fldrslt \cf3 interactivepython@online.rice.edu}}. We will investigate and handle as appropriate.
\b\fs48 \
\pard\pardeftab720\sl840\sa200
\cf0 Mini-project description - Blackjack\
\pard\pardeftab720\sa200

\b0\fs24 \cf0 Blackjack is a simple, popular card game that is played in many casinos. Cards in Blackjack have the following values: an ace may be valued as either 1 or 11 (player's choice), face cards (kings, queens and jacks) are valued at 10 and the value of the remaining cards corresponds to their number. During a round of Blackjack, the players plays against a dealer with the goal of building a hand (a collection of cards) whose cards have a total value that is higher than the value of the dealer's hand, but not over 21. \'a0(A round of Blackjack is also sometimes referred to as a hand.)\
\pard\pardeftab720
\cf0 The game logic for our 
\i simplified
\i0  version of Blackjack is as follows. The player and the dealer are each dealt two cards initially with one of the dealer's cards being dealt faced down (his 
\i hole
\i0  card). The player may then ask for the dealer to repeatedly "hit" his hand by dealing him another card. If, at any point, the value of the player's hand exceeds 21, the player is "busted" and loses immediately. At any point prior to busting, the player may "stand" and the dealer will then hit his hand until the value of his hand is 17 or more. (For the dealer, aces count as 11 unless it causes the dealer's hand to bust). If the dealer busts, the player wins. Otherwise, the player and dealer then compare the values of their hands and the hand with the higher value wins. 
\b The dealer wins ties in our version.
\fs32 \
\pard\pardeftab720\sl840\sa200
\cf0 Mini-project development process\
\pard\pardeftab720

\b0\fs24 \cf0 We suggest you develop your Blackjack game in two phases. The first phase will concentrate on implementing the basic logic of Blackjack while the second phase will focus on building a more full-featured version. In phase one, you will use buttons to control the game and print the state of the game to the console using print statements. In the second phase, you will replace the print statements by drawing images and text on the canvas and add some extra game logic.\
\pard\pardeftab720\sa200
\cf0 \
In phase one, we will provide testing templates for four of the steps. The templates are designed to check whether your class implementations work correctly. You should copy your class definition into the testing template and compare the console output generated by running the template with the provided output. If the output matches, it is likely that your implementation of the class is correct. 
\b DO NOT PROCEED TO THE NEXT STEP UNTIL YOUR CODE WORKS WITH THE PROVIDED TESTING TEMPLATE.
\b0  Debugging code that uses incorrectly implemented classes is extremely difficult. Avoid this problem by using our provided testing templates.\
\pard\pardeftab720\sa200

\b \cf0 Phase one
\b0 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\sl420
\ls1\ilvl0\cf0 {\listtext	1.	}Download the {\field{\*\fldinst{HYPERLINK "http://www.codeskulptor.org/#examples-blackjack_template.py"}}{\fldrslt 
\b \cf3 program template}} for this mini-project and review the class definition for the 
\f1 \cf4 \cb5 Card
\f0 \cf0 \cb1  class. This class is already implemented so your task is to familiarize yourself with the code. Start by pasting the 
\f1 \cf4 \cb5 Card
\f0 \cf0 \cb1  class definition into the provided {\field{\*\fldinst{HYPERLINK "http://www.codeskulptor.org/#examples-card_template.py"}}{\fldrslt 
\b \cf3 testing template}} and verifying that our implementation works as expected.\
{\listtext	2.	}Implement the methods 
\f1 \cf4 \cb5 __init__, __str__, add_card
\f0 \cf0 \cb1  for the 
\f1 \cf4 \cb5 Hand
\f0 \cf0 \cb1  class. We suggest modeling a hand as a list of cards. For help in implementing the 
\f1 \cf4 \cb5 __str__
\f0 \cf0 \cb1  method for hands, refer back to {\field{\*\fldinst{HYPERLINK "https://class.coursera.org/interactivepython-002/wiki/view?page=practice_mouse"}}{\fldrslt \cf3 practice exercise number four}} from last week. Remember to use the string method for cards to convert each card object into a string. Once you have implemented the 
\f1 \cf4 \cb5 Hand
\f0 \cf0 \cb1  class, test it using the provided {\field{\*\fldinst{HYPERLINK "http://www.codeskulptor.org/#examples-hand_template.py"}}{\fldrslt 
\b \cf3 testing template}}.\
{\listtext	3.	}Implement the methods for the 
\f1 \cf4 \cb5 Deck
\f0 \cf0 \cb1  class listed in the mini-project template. We suggest modeling a deck of cards as list of cards. You can generate this list using a pair of nested 
\f1 \cf4 \cb5 for
\f0 \cf0 \cb1  loops or a list comprehension. Remember to use the 
\f1 \cf4 \cb5 Card
\f0 \cf0 \cb1  initializer to create your cards. Use 
\f1 \cf4 \cb5 random.shuffle()
\f0 \cf0 \cb1 to shuffle this deck of cards. Once you have implemented the 
\f1 \cf4 \cb5 Deck
\f0 \cf0 \cb1  class, test your Deck class using the provided {\field{\*\fldinst{HYPERLINK "http://www.codeskulptor.org/#examples-deck_template.py"}}{\fldrslt 
\b \cf3 testing template}}.\
{\listtext	4.	}Implement the handler for a "Deal" button that shuffles the deck and deals the two cards to both the dealer and the player. The event handler 
\f1 \cf4 \cb5 deal
\f0 \cf0 \cb1 for this button should shuffle the deck (stored as a global variable), create new player and dealer hands (stored as global variables), and add two cards to each hand. To transfer a card from the deck to a hand, you should use the 
\f1 \cf4 \cb5 deal_card
\f0 \cf0 \cb1  method of the 
\f1 \cf4 \cb5 Deck
\f0 \cf0 \cb1  class and the 
\f1 \cf4 \cb5 add_card
\f0 \cf0 \cb1  method of 
\f1 \cf4 \cb5 Hand
\f0 \cf0 \cb1  class in combination. The resulting hands should be printed to the console with an appropriate message indicating which hand is which.\
{\listtext	5.	}Implement the 
\f1 \cf4 \cb5 get_value
\f0 \cf0 \cb1  method for the 
\f1 \cf4 \cb5 Hand
\f0 \cf0 \cb1  class. You should use the provided 
\f1 \cf4 \cb5 VALUE
\f0 \cf0 \cb1  dictionary to look up the value of a single card in conjunction with the logic explained in the video lecture for this project to compute the value of a hand. Once you have implemented the 
\f1 \cf4 \cb5 get_value
\f0 \cf0 \cb1 method, test it using the provided {\field{\*\fldinst{HYPERLINK "http://www.codeskulptor.org/#examples-getvalue_template.py"}}{\fldrslt 
\b \cf3 testing template
\b0  }}. Remember that the deck is randomized after shuffling, so the output of the testing template should match the output in the comments in form but not in exact value.\
{\listtext	6.	}Implement the handler for a "Hit" button. If the value of the hand is less than or equal to 21, clicking this button adds an extra card to player's hand. If the value exceeds 21 after being hit, print "You have busted".\
{\listtext	7.	}Implement the handler for a "Stand" button. If the player has busted, remind the player that they have busted. Otherwise, repeatedly hit the dealer until his hand has value 17 or more (using a while loop). If the dealer busts, let the player know. Otherwise, compare the value of the player's and dealer's hands. If the value of the player's hand is less than or equal to the dealer's hand, the dealer wins. Otherwise the player has won. 
\b Remember the dealer wins ties in our version.
\b0 \
\pard\pardeftab720\sa200
\cf0 With this design, the player needs to explicitly press "Deal" to start a new deal. This choice will make using the canvas to build an image-based version of Blackjack easier. At this point, we would suggest testing your implementation of Blackjack extensively.\
\pard\pardeftab720

\b \cf0 Phase two
\b0 \
\pard\pardeftab720\sa200
\cf0 In the second phase of your implementation, you will add five features. For those involving drawing with global variables, remember to initialize these variables to appropriate values (like creating empty hands for the player and dealer) just before starting the frame. \'a0\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sl420
\ls2\ilvl0\cf0 {\listtext	1.	}Implement your own 
\f1 \cf4 \cb5 draw
\f0 \cf0 \cb1  method for the 
\f1 \cf4 \cb5 Hand
\f0 \cf0 \cb1  class using the 
\f1 \cf4 \cb5 draw
\f0 \cf0 \cb1  method of the 
\f1 \cf4 \cb5 Card
\f0 \cf0 \cb1  class. We suggest drawing a hand as a horizontal sequence of cards where the parameter 
\f1 \cf4 \cb5 pos
\f0 \cf0 \cb1  is the position of the upper left corner of the leftmost card. To simplify your code, you may assume that only the first five cards of a player's hand need to be visible on the canvas.\
{\listtext	2.	}Replace printing in the console by drawing text messages on the canvas. We suggest adding a global 
\f1 \cf4 \cb5 outcome
\f0 \cf0 \cb1  string that is drawn in the draw handler using 
\f1 \cf4 \cb5 draw_text
\f0 \cf0 \cb1 . These messages should prompt the player to take some require action and have a form similar to "Hit or stand?" and "New deal?". Also, draw the title of the game, "Blackjack", somewhere on the canvas.\
{\listtext	3.	}Add logic using the global variable 
\f1 \cf4 \cb5 in_play
\f0 \cf0 \cb1  that keeps track of whether the player's hand is still being played. If the round is still in play, you should draw an image of the back of a card (provided in the template) over the dealer's first (hole) card to hide it. Once the round is over, the dealer's hole card should be displayed.\
{\listtext	4.	}Add a score counter that keeps track of wins and losses for your Blackjack session. In the simplest case (see our demo), the program displays wins minus losses. However, you are welcome to implement a more sophisticated betting/scoring system.\
{\listtext	5.	}Modify the logic for the "Deal" button to create and shuffle a new deck (or restock and shuffle an existing deck) each time the "Deal" button is clicked. This change avoids the situation where the deck becomes empty during play.\
{\listtext	6.	}Finally, modify the 
\f1 \cf4 \cb5 deal
\f0 \cf0 \cb1  function such that, if the "Deal" button is clicked during the middle of a round, the program reports that the player lost the round and updates the score appropriately.\
\pard\pardeftab720
\cf0 Congratulations! You have just built Blackjack. To wrap things up, please review the demo of our version of Blackjack in the Blackjack video lecture to ensure that your version has full functionality.
\b\fs32 \
\pard\pardeftab720\sl840\sa200
\cf0 Grading rubric - 18 pts total (scaled to 100)\
\pard\pardeftab720

\b0\fs24 \cf0 You must implement the simplified rules of Blackjack specified in this description. Small variations from our demo version are acceptable such as displaying the value of a hand or implementing a betting system. 
\b But, you may not change the logic of the game.
\b0  After the submission deadline, you are welcome to post enhanced versions of Blackjack to the Hall of Fame with more realistic game logic such as pushes on ties, splitting pairs and doubling down.\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sl420
\ls3\ilvl0\cf0 {\listtext	\'95	}1 pt - The program displays the title "Blackjack" on the canvas.\
{\listtext	\'95	}1 pt - The program displays 3 buttons ("Deal", "Hit" and "Stand") in the control area.\
{\listtext	\'95	}2 pts - The program graphically displays the player's hand using card images. (1 pt if text is displayed in the console instead)\
{\listtext	\'95	}2 pts - The program graphically displays the dealer's hand using card images. Displaying both of the dealer's cards face up is allowable when evaluating this bullet. (1 pt if text displayed in the console instead)\
{\listtext	\'95	}1 pt - The dealer's hole card is hidden until the current round is over. After the round is over, it is displayed.\
{\listtext	\'95	}2 pts - Pressing the "Deal" button deals out two cards each to the player and dealer. (1 pt per player)\
{\listtext	\'95	}1 pt - Pressing the "Deal" button in the middle of the round causes the player to lose the current round.\
{\listtext	\'95	}1 pt - Pressing the "Hit" button deals another card to the player.\
{\listtext	\'95	}1 pt - Pressing the "Stand" button deals cards to the dealer as necessary.\
{\listtext	\'95	}1 pt - The program correctly recognizes the player busting.\
{\listtext	\'95	}1 pt - The program correctly recognizes the dealer busting.\
{\listtext	\'95	}1 pt - The program correctly computes hand values and declares a winner. Evaluate based on messages.\
{\listtext	\'95	}2 pts - The program accurately prompts the player for an action with messages similar to "Hit or stand?" and "New deal?". (1 pt per message)\
{\listtext	\'95	}1 pt - The program implements a scoring system that correctly reflects wins and losses. Please be generous in evaluating this item.\
\pard\pardeftab720\sl420\sa200

\f2\fs28 \cf6 \cb7 In the submission phase, cut and paste the URL for your cloud-saved mini-project into the box below. Hit the "Submit for grading" button when you are ready to submit your mini-project.\
When evaluating, copy and paste the link above into a new browser tab, to load your peer's program into CodeSkulptor. Evaluate your peer's program according to the rubric below and hit "Submit" when your evaluation is complete.\
\pard\pardeftab720\sl420
{\field{\*\fldinst{HYPERLINK "http://www.codeskulptor.org/#user15_ijPyCSqCqCplzcF_7.py"}}{\fldrslt \cf3 \cb8 http://www.codeskulptor.org/#user15_ijPyCSqCqCplzcF_7.py}}\cb8 \
\pard\pardeftab720\sl540
\cf6 \cb9 \
}