{\rtf1\ansi\ansicpg1252\cocoartf1138\cocoasubrtf510
{\fonttbl\f0\fnil\fcharset0 HelveticaNeue;\f1\fnil\fcharset0 Monaco;}
{\colortbl;\red255\green255\blue255;\red38\green38\blue38;\red255\green255\blue128;\red255\green255\blue255;
\red16\green113\blue198;\red207\green0\blue52;\red245\green245\blue248;\red235\green235\blue235;\red241\green241\blue241;
}
{\*\listtable{\list\listtemplateid1\listhybrid{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{decimal\}.}{\leveltext\leveltemplateid1\'02\'00.;}{\levelnumbers\'01;}\fi-360\li720\lin720 }{\listname ;}\listid1}
{\list\listtemplateid2\listhybrid{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{decimal\}.}{\leveltext\leveltemplateid101\'02\'00.;}{\levelnumbers\'01;}\fi-360\li720\lin720 }{\listname ;}\listid2}
{\list\listtemplateid3\listhybrid{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{decimal\}.}{\leveltext\leveltemplateid201\'02\'00.;}{\levelnumbers\'01;}\fi-360\li720\lin720 }{\listname ;}\listid3}
{\list\listtemplateid4\listhybrid{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{decimal\}.}{\leveltext\leveltemplateid301\'02\'00.;}{\levelnumbers\'01;}\fi-360\li720\lin720 }{\listname ;}\listid4}
{\list\listtemplateid5\listhybrid{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{decimal\}.}{\leveltext\leveltemplateid401\'02\'00.;}{\levelnumbers\'01;}\fi-360\li720\lin720 }{\listname ;}\listid5}
{\list\listtemplateid6\listhybrid{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{decimal\}.}{\leveltext\leveltemplateid501\'02\'00.;}{\levelnumbers\'01;}\fi-360\li720\lin720 }{\listname ;}\listid6}
{\list\listtemplateid7\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid601\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid7}}
{\*\listoverridetable{\listoverride\listid1\listoverridecount0\ls1}{\listoverride\listid2\listoverridecount0\ls2}{\listoverride\listid3\listoverridecount0\ls3}{\listoverride\listid4\listoverridecount0\ls4}{\listoverride\listid5\listoverridecount0\ls5}{\listoverride\listid6\listoverridecount0\ls6}{\listoverride\listid7\listoverridecount0\ls7}}
\paperw11900\paperh16840\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\deftab720
\pard\pardeftab720\sl420\sa360

\f0\fs28 \cf2 \cb3 Your grade is 
\fs56 13
\fs28 , which was calculated based on a combination of the grade you received from your peers and the grade you gave yourself.\
See below for details.\
\pard\pardeftab720\sl840\sa200

\b\fs32 \cf2 \cb4 A reminder about the Honor Code\'a0\
\pard\pardeftab720\sl420

\b0\fs28 \cf2 For previous mini-projects, we have had instances of students submitting solutions that have been copied from the web. Remember, if you can find code on the web for one of the mini-projects, we can also find that code. Submitting copied code violates the Honor Code for this class as well as Coursera's Terms of Service. Please write your own code and refrain from copying. If, during peer evaluation, you suspect a submitted mini-project includes copied code, please evaluate as usual and email the assignment details to {\field{\*\fldinst{HYPERLINK "mailto:interactivepython@online.rice.edu"}}{\fldrslt \cf5 interactivepython@online.rice.edu}}. We will investigate and handle as appropriate.
\b\fs48 \
\pard\pardeftab720\sl840\sa200
\cf2 Mini-project description - 
\i RiceRocks (Asteroids)
\i0 \
\pard\pardeftab720\sl420

\b0\fs28 \cf2 For our last mini-project, we will complete the implementation of 
\i RiceRocks
\i0 , an updated version of 
\i Asteroids
\i0 , \'a0that we began last week. \'a0You may start with either your code or the {\field{\*\fldinst{HYPERLINK "http://www.codeskulptor.org/#examples-ricerocks_template.py"}}{\fldrslt 
\b \cf5 program template}} which includes a full implementation of Spaceship and will be released immediately after the deadline for the Spaceship mini-project (by making the preceding link live). \'a0If you start with your own code, you should add the splash screen image that you dismiss with a mouse click before starting this mini-project. \'a0We strongly recommend using Chrome for this mini-project since Chrome's superior performance will become apparent when you program attempts to draw dozens of sprites.
\b\fs32 \
\pard\pardeftab720\sl840\sa200
\cf2 Mini-project development process\
\pard\pardeftab720\sl420

\b0\fs28 \cf2 At the end of this project, your game will have multiple rocks and multiple missiles. \'a0You will lose a life if your ship collides with a rock and you will score points if your missile collides with a rock. You will keep track of the score and lives remaining and end the game at the proper time. \'a0You may optionally add animated explosions when there is a collision.\
\pard\pardeftab720\sl420\sa200

\b \cf2 Phase one - \'a0Multiple rocks
\b0 \
For this phase, you will keep a set of rocks and spawn new rocks into this set. \'a0This requires the following steps:\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sl420
\ls1\ilvl0\cf2 {\listtext	1.	}Remove 
\f1\fs24 \cf6 \cb7 a_rock
\f0\fs28 \cf2 \cb4  and replace it with 
\f1\fs24 \cf6 \cb7 rock_group
\f0\fs28 \cf2 \cb4 . Initialize the rock group to an empty set. Modify your rock spawner to create a new rock (an instance of a Sprite object) and add it to 
\f1\fs24 \cf6 \cb7 rock_group
\f0\fs28 \cf2 \cb4 .\
{\listtext	2.	}Modify your rock spawner to limit the total number of rocks in the game at any one time. We suggest you limit it to 12. With too many rocks the game becomes less fun and the animation slows down significantly.\
{\listtext	3.	}Create a helper function 
\f1\fs24 \cf6 \cb7 process_sprite_group
\f0\fs28 \cf2 \cb4 . This function should take a set and a canvas and call the update and draw methods for each sprite in the group.\
{\listtext	4.	}Call the 
\f1\fs24 \cf6 \cb7 process_sprite_group
\f0\fs28 \cf2 \cb4  function on 
\f1\fs24 \cf6 \cb7 rock_group
\f0\fs28 \cf2 \cb4  in the draw handler.\
\pard\pardeftab720\sl420

\b \cf2 Phase two - Collisions
\b0 \
\pard\pardeftab720\sl420\sa200
\cf2 For this phase, you will detect collisions between the ship and a rock. Upon a collision, the rock should be destroyed and the player should lose a life. To implement ship-rock collisions, you need to do the following:\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sl420
\ls2\ilvl0\cf2 {\listtext	1.	}Add a 
\f1\fs24 \cf6 \cb7 collide
\f0\fs28 \cf2 \cb4  method to the Sprite class. This should take an 
\f1\fs24 \cf6 \cb7 other_object
\f0\fs28 \cf2 \cb4  as an argument and return 
\f1\fs24 \cf6 \cb7 True
\f0\fs28 \cf2 \cb4  if there is a collision or 
\f1\fs24 \cf6 \cb7 False
\f0\fs28 \cf2 \cb4 otherwise. For now, this other object will always be your ship, but we want to be able to use this collide method to detect collisions with missiles later, as well. Collisions can be detected using the radius of the two objects. This requires you to implement methods 
\f1\fs24 \cf6 \cb7 get_position
\f0\fs28 \cf2 \cb4  and 
\f1\fs24 \cf6 \cb7 get_radius
\f0\fs28 \cf2 \cb4  on both the Sprite and Ship classes.\
{\listtext	2.	}Implement a 
\f1\fs24 \cf6 \cb7 group_collide
\f0\fs28 \cf2 \cb4  helper function. This function should take a set 
\f1\fs24 \cf6 \cb7 group
\f0\fs28 \cf2 \cb4  and an a sprite 
\f1\fs24 \cf6 \cb7 other_object
\f0\fs28 \cf2 \cb4  and check for collisions between
\f1\fs24 \cf6 \cb7 other_object
\f0\fs28 \cf2 \cb4  and elements of the group. If there is a collision, the colliding object should be removed from the group. To avoid removing an object from a set that you are iterating over (which can cause you a serious debugging headache), iterate over a copy of the set created via 
\f1\fs24 \cf6 \cb7 set(group)
\f0\fs28 \cf2 \cb4 . This function should return the number of collisions. Be sure to use the 
\f1\fs24 \cf6 \cb7 collide
\f0\fs28 \cf2 \cb4  method from part 1 on the sprites in the group to accomplish this task.\
{\listtext	3.	}In the draw handler, use the 
\f1\fs24 \cf6 \cb7 group_collide
\f0\fs28 \cf2 \cb4  helper to determine if the ship hit any of the rocks. If so, decrease the number of lives by one. Note that you could have negative lives at this point. Don't worry about that yet.\
\pard\pardeftab720\sl420
\cf2 At this point, you should have a game of "dodge 'em". You can fly around trying to avoid the rocks!\
\pard\pardeftab720\sl420\sa200

\b \cf2 Phase three - Missiles
\b0 \
For this phase, you will keep a set of missiles and spawn new missiles into this set when firing using the space bar. This requires the following steps:\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sl420
\ls3\ilvl0\cf2 {\listtext	1.	}Remove 
\f1\fs24 \cf6 \cb7 a_missile
\f0\fs28 \cf2 \cb4  and replace it with 
\f1\fs24 \cf6 \cb7 missile_group
\f0\fs28 \cf2 \cb4 . \'a0Initialize the missile group to an empty set. \'a0Modify your shoot method of 
\f1\fs24 \cf6 \cb7 my_ship
\f0\fs28 \cf2 \cb4  to create a new missile (an instance of the Sprite class) and add it to the 
\f1\fs24 \cf6 \cb7 missile_group
\f0\fs28 \cf2 \cb4 . If you use our code, the firing sound should play automatically each time a missile is spawned.\
{\listtext	2.	}In the draw handler, use your helper function 
\f1\fs24 \cf6 \cb7 process_sprite_group
\f0\fs28 \cf2 \cb4  to process 
\f1\fs24 \cf6 \cb7 missile_group
\f0\fs28 \cf2 \cb4 . While you can now shoot multiple missiles, you will notice that they stick around forever. To fix this, we need to modify the Sprite class and the 
\f1\fs24 \cf6 \cb7 process_sprite_group
\f0\fs28 \cf2 \cb4  function.\
{\listtext	3.	}In the 
\f1\fs24 \cf6 \cb7 update
\f0\fs28 \cf2 \cb4  method of the Sprite class, increment the age of the sprite every time 
\f1\fs24 \cf6 \cb7 update
\f0\fs28 \cf2 \cb4  is called. If the age is greater than or equal to the lifespan of the sprite, then we want to remove it. So, return 
\f1\fs24 \cf6 \cb7 False
\f0\fs28 \cf2 \cb4  (meaning we want to keep it) if the age is less than the lifespan and 
\f1\fs24 \cf6 \cb7 True
\f0\fs28 \cf2 \cb4 (meaning we want to remove it) otherwise.\
{\listtext	4.	}Modify 
\f1\fs24 \cf6 \cb7 process_sprite_group
\f0\fs28 \cf2 \cb4  to check the return value of 
\f1\fs24 \cf6 \cb7 update
\f0\fs28 \cf2 \cb4  for sprites. If it returns 
\f1\fs24 \cf6 \cb7 True
\f0\fs28 \cf2 \cb4 , remove the sprite from the group. Again, you will want to iterate over a copy of the sprite group in 
\f1\fs24 \cf6 \cb7 process_sprite_group
\f0\fs28 \cf2 \cb4  to avoid deleting from the same set over which you are iterating.\
\pard\pardeftab720\sl420

\b \cf2 Phase four - Collisions revisited 
\b0 Now, we want to destroy rocks when they are hit by a missile. We can't quite use 
\f1\fs24 \cf6 \cb7 group_collide
\f0\fs28 \cf2 \cb4 , because we want to check for collisions between two groups. All we need to do is add one more helper function:\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sl420
\ls4\ilvl0\cf2 {\listtext	1.	}Implement a final helper function 
\f1\fs24 \cf6 \cb7 group_group_collide
\f0\fs28 \cf2 \cb4  that takes two groups of objects as input. 
\f1\fs24 \cf6 \cb7 group_group_collide
\f0\fs28 \cf2 \cb4  should iterate through the elements of a copy of the first group using a 
\f1\fs24 \cf6 \cb7 for
\f0\fs28 \cf2 \cb4 -loop and then call 
\f1\fs24 \cf6 \cb7 group_collide
\f0\fs28 \cf2 \cb4  with each of these elements on the second group.
\f1\fs24 \cf6 \cb7 group_group_collide
\f0\fs28 \cf2 \cb4  should return the number of elements in the first group that collide with the second group as well as delete these elements in the first group.\
{\listtext	2.	}Call 
\f1\fs24 \cf6 \cb7 group_group_collide
\f0\fs28 \cf2 \cb4  in the draw handler to detect missile/rock collisions. Increment the score by the number of missile collisions.\
\pard\pardeftab720\sl420

\b \cf2 Phase five - Finish it off
\b0 \
\pard\pardeftab720\sl420\sa200
\cf2 You now have a mostly working version of 
\i RiceRocks
\i0 !!! Let's add a few final touches.\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sl420
\ls5\ilvl0\cf2 {\listtext	1.	}Add code to the draw handler such that, if the number of lives becomes 0, the game is reset and the splash screen appears. In particular, set the flag
\f1\fs24 \cf6 \cb7 started
\f0\fs28 \cf2 \cb4  to 
\f1\fs24 \cf6 \cb7 False
\f0\fs28 \cf2 \cb4 , destroy all rocks and prevent any more rocks for spawning until the game is restarted.\
{\listtext	2.	}When the game restarts, make sure the lives and the score are properly reset. Starting spawning rocks again. Restart the soundtrack.\
{\listtext	3.	}When you spawn rocks, you want to make sure they are some distance away from the ship. Otherwise, you can die when a rock spawns on top of you, which isn't much fun. One simple way to acheive this effect to ignore a rock spawn event if the spawned rock is too close to the ship.\
{\listtext	4.	}Experiment with varying the velocity of rocks based on the score to make game play more difficult as the game progresses.\
{\listtext	5.	}Tweak any constants that you have to make the game play the way you want.\
\pard\pardeftab720\sl420
\cf2 Congratulations! You have completed the assignment. Enjoy playing your game!!!\
\pard\pardeftab720\sl420\sa200

\b \cf2 Bonus
\b0 \
The following will not be graded. Feel free to try this, but do not break any of the other game functionality. We strongly recommend that you save your work before doing this and keep track of it, so you can submit a working version of the first five phases if you end up breaking your game trying to add more features.\
One thing that is missing in your game is explosions when things collide. We have provided a tiled explosion image that you can use to create animated explosions. To get things working, you will need to do a few things:\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sl420
\ls6\ilvl0\cf2 {\listtext	1.	}In the draw method of the Sprite class, check if 
\f1\fs24 \cf6 \cb7 self.animated
\f0\fs28 \cf2 \cb4  is 
\f1\fs24 \cf6 \cb7 True
\f0\fs28 \cf2 \cb4 . If so, then choose the correct tile in the image based on the age. The image is tiled horizontally. If 
\f1\fs24 \cf6 \cb7 self.animated
\f0\fs28 \cf2 \cb4  is 
\f1\fs24 \cf6 \cb7 False
\f0\fs28 \cf2 \cb4 , it should continue to draw the sprite as before.\
{\listtext	2.	}Create an 
\f1\fs24 \cf6 \cb7 explosion_group
\f0\fs28 \cf2 \cb4  global variable and initialize it to an empty set.\
{\listtext	3.	}In 
\f1\fs24 \cf6 \cb7 group_collide
\f0\fs28 \cf2 \cb4 , if there is a collision, create a new explosion (an instance of the Sprite class)and add it to the 
\f1\fs24 \cf6 \cb7 explosion_group
\f0\fs28 \cf2 \cb4 . Make sure that each explosion plays the explosion sound.\
{\listtext	4.	}In the draw handler, use 
\f1\fs24 \cf6 \cb7 process_sprite_group
\f0\fs28 \cf2 \cb4  to process 
\f1\fs24 \cf6 \cb7 explosion_group
\f0\fs28 \cf2 \cb4 .\
\pard\pardeftab720\sl420
\cf2 You should now have explosions working!
\b\fs32 \
\pard\pardeftab720\sl840\sa200
\cf2 Grading rubric - 13 pts (scaled to 100 pts)\
\pard\pardeftab720\sl420

\b0\fs28 \cf2 Note that the animated explosions are not graded. However, please add comments concerning the quality of the explosions and general gameplay in the free comments at the bottom of the page. Please assess your peer's mini-projects in Chrome. 
\b If, for some reason, you must use Firefox or another browser (or had issues playing sounds in Chrome), please give your peers full credit on the sound-related rubric items.
\b0 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\sl420
\ls7\ilvl0\cf2 {\listtext	\'95	}1 pt - The program spawns multiple rocks.\
{\listtext	\'95	}1 pt - The program correctly determines whether the ship collides with a rock.\
{\listtext	\'95	}1 pt - The program removes a rock when the ship collides with a rock.\
{\listtext	\'95	}1 pt - The number of lives decreases by one when the ship collides with a rock.\
{\listtext	\'95	}1 pt - The program spawns multiple missiles.\
{\listtext	\'95	}1 pt - The program plays the firing sound when each missile is spawned.\
{\listtext	\'95	}1 pt - The program removes a missile that does not collide with a rock after some fixed time period.\
{\listtext	\'95	}1 pt - The program correctly determines whether a missile and a rock collide.\
{\listtext	\'95	}1 pt - The program removes missiles and rocks that collide.\
{\listtext	\'95	}1 pt - The score is updated appropriately after missile/rock collisions.\
{\listtext	\'95	}1 pt - When the lives go to zero, the splash screen reappears and all rocks are removed.\
{\listtext	\'95	}1 pt - When the splash screen is clicked, the lives are reset to 3, score is reset to zero and the soundtrack restarts.\
{\listtext	\'95	}1 pt - The game spawns rocks only when the splash screen is not visible and a game is in progressed.\
\pard\pardeftab720\sl420\sa200
\cf2 \cb8 In the submission phase, cut and paste the URL for your cloud-saved mini-project into the box below. Hit the "Submit for grading" button when you are ready to submit your mini-project.\
When evaluating, copy and paste the link above into a new browser tab, to load your peer's program into CodeSkulptor. Evaluate your peer's program according to the rubric below and hit "Submit" when your evaluation is complete.\
\pard\pardeftab720\sl420
{\field{\*\fldinst{HYPERLINK "http://www.codeskulptor.org/#user16_hyeUejTOmY_16.py"}}{\fldrslt \cf5 \cb9 http://www.codeskulptor.org/#user16_hyeUejTOmY_16.py}}\cb9 \
}