{\rtf1\ansi\ansicpg1252\cocoartf1138\cocoasubrtf510
{\fonttbl\f0\froman\fcharset0 Times-Roman;\f1\fnil\fcharset0 Monaco;\f2\fnil\fcharset0 HelveticaNeue;
}
{\colortbl;\red255\green255\blue255;\red16\green113\blue198;\red207\green0\blue52;\red245\green245\blue248;
\red38\green38\blue38;\red235\green235\blue235;\red241\green241\blue241;\red255\green255\blue194;}
{\*\listtable{\list\listtemplateid1\listhybrid{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{decimal\}.}{\leveltext\leveltemplateid1\'02\'00.;}{\levelnumbers\'01;}\fi-360\li720\lin720 }{\listname ;}\listid1}
{\list\listtemplateid2\listhybrid{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{decimal\}.}{\leveltext\leveltemplateid101\'02\'00.;}{\levelnumbers\'01;}\fi-360\li720\lin720 }{\listname ;}\listid2}
{\list\listtemplateid3\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid201\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid3}}
{\*\listoverridetable{\listoverride\listid1\listoverridecount0\ls1}{\listoverride\listid2\listoverridecount0\ls2}{\listoverride\listid3\listoverridecount0\ls3}}
\paperw11900\paperh16840\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\deftab720
\pard\pardeftab720\sl840\sa200

\f0\b\fs40 \cf0 Mini-project description \'97 \'93Guess the number\'94 game\
\pard\pardeftab720\sa200

\b0\fs24 \cf0 One of the simplest two-player games is \'93Guess the number\'94. The first player thinks of a secret number in some known range while the second player attempts to guess the number. After each guess, the first player answers either \'93Higher\'94, \'93Lower\'94 or \'93Correct!\'94 depending on whether the secret number is higher, lower or equal to the guess. In this project, you will build a simple interactive program in Python where the computer will take the role of the first player while you play as the second player.\
You will interact with your program using an input field and several buttons. For this project, we will ignore the canvas and print the computer's responses in the console. Building an initial version of your project that prints information in the console is a development strategy that you should use in later projects as well. Focusing on getting the logic of the program correct before trying to make it display the information in some \'93nice\'94 way on the canvas usually saves lots of time since debugging logic errors in graphical output can be tricky.\
\pard\pardeftab720\sl840\sa200

\b\fs32 \cf0 Mini-project development process\
\pard\pardeftab720\sa200

\b0\fs24 \cf0 We have provided a basic template for this mini-project {\field{\*\fldinst{HYPERLINK "http://www.codeskulptor.org/#examples-guess_the_number_template.py"}}{\fldrslt 
\b \cf2 here
\b0  }}. Our suggested development strategy for the basic version of \'93Guess the number\'94 is:\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sl420\sa200
\ls1\ilvl0\cf0 {\listtext	1.	}Decide on a set of global variables that contain the state of the game. For example, one obvious choice is the secret number that has been generated by the program. You will need other global variables, especially to accomodate later extensions to the basic game.\
{\listtext	2.	}Figure out how to generate a random secret number in a given range, 
\f1 \cf3 \cb4 low
\f0 \cf0 \cb1  to 
\f1 \cf3 \cb4 high
\f0 \cf0 \cb1 . When discussing ranges, we will follow the standard Python convention of including the low end of the range and excluding the high end of the range, which can be expressed mathematically as 
\f1 \cf3 \cb4 [low, high)
\f0 \cf0 \cb1 . So, 
\f1 \cf3 \cb4 [0, 3)
\f0 \cf0 \cb1  means all of the numbers starting at 0 up to, but not including 3. In other words 0, 1, and 2. We suggest using the range 
\f1 \cf3 \cb4 [0, 100)
\f0 \cf0 \cb1  in your first implementation. 
\b Hint:
\b0  look at the functions in the 
\f1 \cf3 \cb4 random
\f0 \cf0 \cb1  module to figure out how to easily select such a random number. We suggest testing this in a separate CodeSkulptor tab before adding code to your project.\
{\listtext	3.	}Figure out how to create an input text box using the 
\f1 \cf3 \cb4 simplegui
\f0 \cf0 \cb1  module. You will use this input to get the guess from the user. For all variants of the game, this input field should always be active (in other words, a game should always be in progress). Again, test in a separate CodeSkulptor tab before adding code to your project.\
{\listtext	4.	}Write the event handler 
\f1 \cf3 \cb4 input_guess(guess)
\f0 \cf0 \cb1  that takes the input 
\f1 \cf3 \cb4 guess
\f0 \cf0 \cb1 , compares it to the secret number and prints out the appropriate response. Remember that 
\f1 \cf3 \cb4 guess
\f0 \cf0 \cb1  is a string so you will need to convert it into a number before testing it against the secret number. 
\b Hint:
\b0  We have showed you how to convert strings to numbers in the lectures.\
{\listtext	5.	}Test your code by playing multiple games of \'93Guess the number\'94 with a fixed range. At this point, you will need to re-run your program between each game (using the CodeSkulptor \'93Run\'94 button).\
\pard\pardeftab720\sa200
\cf0 From this minimal working version of \'93Guess the number\'94, the rest of this project consists of adding extra functionality to your project. There are two improvements that you will need to make to get full credit:\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sl420\sa200
\ls2\ilvl0\cf0 {\listtext	1.	}Using function(s) in the 
\f1 \cf3 \cb4 simplegui
\f0 \cf0 \cb1  module, add buttons to restart the game so that you don't need to repeatedly click \'93Run\'94 in CodeSkulptor to play multiple games. You should add two buttons: \'93Range:\'a00\'a0-\'a0100\'94 and \'93Range:\'a00\'a0-\'a01000\'94 that allow the player to choose different ranges for the secret number. Using either of these buttons should restart the game and print out an appropriate message. They should work at any time during the game.\uc0\u8232 As you play \'93Guess the number\'94, you might notice that a good strategy is to maintain an interval that consists of the highest guess that is \'93Lower\'94 than the secret number and the lowest guess that is \'93Higher\'94 than the secret number. A good choice for the next guess is the number that is the average of these two numbers. The answer for this new guess then allows you to figure a new interval that contains the secret number and that is half as large. For example, if the secret number is in the range 
\f1 \cf3 \cb4 [0, 100)
\f0 \cf0 \cb1 , it is a good idea to guess 
\f1 \cf3 \cb4 50
\f0 \cf0 \cb1 . If the answer is "Higher", the secret number must be in the range 
\f1 \cf3 \cb4 [51, 100)
\f0 \cf0 \cb1 . It is then a good idea to guess 
\f1 \cf3 \cb4 75
\f0 \cf0 \cb1  and so on. This technique of successively narrowing the range corresponds to a well-known computer algorithm known as {\field{\*\fldinst{HYPERLINK "http://en.wikipedia.org/wiki/Binary_search_algorithm"}}{\fldrslt \cf2 binary search}}.\
{\listtext	2.	}Your final addition to \'93Guess the number\'94 will be to restrict the player to a limited number of guesses. After each guess, your program should include in its output the number of remaining guesses. Once the player has used up those guesses, they lose, the game prints out an appropriate message, and a new game immediately starts.\uc0\u8232 Since the strategy above for playing \'93Guess the number\'94 approximately halves the range of possible secret numbers after each guess, any secret number in the range 
\f1 \cf3 \cb4 [low, high)
\f0 \cf0 \cb1  can always be found in at most 
\f1 \cf3 \cb4 n
\f0 \cf0 \cb1  guesses where 
\f1 \cf3 \cb4 n
\f0 \cf0 \cb1  is the smallest integer such that 
\f1 \cf3 \cb4 2 ** n >= high - low + 1
\f0 \cf0 \cb1 . For the range 
\f1 \cf3 \cb4 [0, 100)
\f0 \cf0 \cb1 , 
\f1 \cf3 \cb4 n
\f0 \cf0 \cb1  is seven. For the range 
\f1 \cf3 \cb4 [0, 1000)
\f0 \cf0 \cb1 , 
\f1 \cf3 \cb4 n
\f0 \cf0 \cb1  is ten. Your program can simply set the number of allowed guess to seven when the range is 
\f1 \cf3 \cb4 [0, 100)
\f0 \cf0 \cb1  or ten when the range is 
\f1 \cf3 \cb4 [0, 1000)
\f0 \cf0 \cb1 . For more of a challenge, you may compute 
\f1 \cf3 \cb4 n
\f0 \cf0 \cb1  from 
\f1 \cf3 \cb4 low
\f0 \cf0 \cb1  and 
\f1 \cf3 \cb4 high
\f0 \cf0 \cb1  using the functions 
\f1 \cf3 \cb4 math.log
\f0 \cf0 \cb1  and 
\f1 \cf3 \cb4 math.ceil
\f0 \cf0 \cb1  in the 
\f1 \cf3 \cb4 math
\f0 \cf0 \cb1  module.\
\pard\pardeftab720\sa200
\cf0 When your program starts, the game should immediately begin in range 
\f1 \cf3 \cb4 [0, 100)
\f0 \cf0 \cb1 . When the game ends (because the player either wins or runs out of guesses), a new game with the same range as the last one should immediately begin. Whenever the player clicks one of the range buttons, the current game should stop and a new game with the selected range should begin.\
\pard\pardeftab720\sl840\sa200

\b\fs32 \cf0 Grading rubric \'97 11 pts total (scaled to 100 pts)\
\pard\pardeftab720\sa200

\b0\fs24 \cf0 Your peers will assess your mini-project according to the rubric given below. To guide you in determining whether your project satisfies each item in the rubric, please consult the video that demonstrates our implementation of \'93Guess the number\'94. Small deviations from the textual output of our implementation are fine. You should avoid potentially confusing deviations (such as printing \'93Too high\'94 or \'93Too low\'94 instead of \'93Lower\'94 and \'93Higher\'94). Whether moderate deviations satisfy an item of the grading rubric is at your peers' discretion during their assessment.\
Here is a break down of the scoring:\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sl420\sa200
\ls3\ilvl0\cf0 {\listtext	\'95	}1 pt \'97 The game starts immediately when the \'93Run\'94 button in CodeSkulptor is pressed.\
{\listtext	\'95	}1 pt \'97 A game is always in progress.\
{\listtext	\'95	}1 pt \'97 The game reads 
\f1 \cf3 \cb4 guess
\f0 \cf0 \cb1  from the input field and correctly prints it out.\
{\listtext	\'95	}3 pts \'97 The game correctly plays \'93Guess the number\'94 with the range 
\f1 \cf3 \cb4 [0, 100)
\f0 \cf0 \cb1  and prints understandable output messages to the console. Play three complete games: 1 pt for each correct game.\
{\listtext	\'95	}2 pts \'97 The game includes two buttons that allow the user to select the range 
\f1 \cf3 \cb4 [0, 100)
\f0 \cf0 \cb1  or the range 
\f1 \cf3 \cb4 [0, 1000)
\f0 \cf0 \cb1  for the secret number. These buttons correctly change the range and print an appropriate message. (1 pt per button.)\
{\listtext	\'95	}2 pts \'97 The game restricts the player to a finite number of guesses and correctly terminates the game when these guesses are exhausted. Award 1 pt if the number of remaining guesses is printed, but the game does not terminate correctly.\
{\listtext	\'95	}1 pt \'97 The game varies the number of allowed guesses based on the range of the secret number \'97 seven guesses for range 
\f1 \cf3 \cb4 [0, 100)
\f0 \cf0 \cb1 , ten guesses for range 
\f1 \cf3 \cb4 [0, 1000)
\f0 \cf0 \cb1 .\
\pard\pardeftab720\sa200
\cf0 To help aid you in gauging what a full credit project might look like, the video lecture on the \'93Guess the number\'94 project includes a demonstration of our implementation of this project. You do not need to validate that the input number is in the correct range. (For this game, that responsibility should fall on the player.)\
\pard\pardeftab720\sl420\sa200

\f2\fs28 \cf5 \cb6 In the submission phase, cut and paste the URL for your cloud-saved mini-project into the box below. Hit the "Submit for grading" button when you are ready to submit your mini-project.\
When evaluating, copy and paste the link above into a new browser tab, to load your peer's program into CodeSkulptor. Evaluate your peer's program according to the rubric below and hit "Submit" when your evaluation is complete.\
\pard\pardeftab720\sl420\sa200
{\field{\*\fldinst{HYPERLINK "http://www.codeskulptor.org/#user11_mt9xM0tXbHDaDHF_4.py"}}{\fldrslt \cf2 \cb7 http://www.codeskulptor.org/#user11_mt9xM0tXbHDaDHF_4.py}}\cb7 \
\pard\pardeftab720\sl540
\cf5 \cb8 \
}